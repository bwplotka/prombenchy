apiVersion: v1
kind: ConfigMap
metadata:
  name: parca
  namespace: core
data:
  # TODO(bwplotka): Add config reloader, otherwise pod has to manually be deleted.
  parca.yaml: |-
    "object_storage":
      "bucket":
        "config":
          "directory": "/var/lib/parca"
        "type": "FILESYSTEM"
    scrape_configs:
      - job_name: prometheus
        scrape_interval: 30s
        scrape_timeout: 40s
        scheme: http
        
        kubernetes_sd_configs:
          - role: pod
              
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            
        relabel_configs:
          - action: keep
            source_labels: [__meta_kubernetes_pod_label_app]
            regex: collector
          - action: keep
            source_labels: [__meta_kubernetes_pod_container_name]
            regex: prometheus|otel-collector
          - action: replace 
            source_labels: [__meta_kubernetes_pod_label_app]
            target_label: job
          - action: replace
            source_labels: [__meta_kubernetes_namespace]
            target_label: namespace
          - action: replace
            source_labels: [__meta_kubernetes_pod_node_name]
            target_label: node_name
          - action: replace
            source_labels: [__meta_kubernetes_pod_container_name]
            target_label: container

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: parca
  namespace: core
  labels:
    app: parca
spec:
  replicas: 1
  selector:
    matchLabels:
      app: parca
  template:
    metadata:
      labels:
        app: parca
    spec:
      serviceAccountName: parca
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
      containers:
      - image: ghcr.io/parca-dev/parca:v0.20.0
        args:
          - /parca
          - "--http-address=:7070"
          - "--config-path=/etc/parca/parca.yaml"
          - "--log-level=info"
          - "--cors-allowed-origins=*"
          - "--debuginfod-upstream-servers=https://debuginfod.systemtap.org"
          - "--debuginfod-http-request-timeout=5m"
        name: parca
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/parca
          name: config
        - mountPath: /var/lib/parca
          name: storage
        ports:
        - name: parca-web-ins
          containerPort: 7070
      volumes:
      - name: config
        configMap:
          name: parca
      # TODO(bwplotka): Make it persistent at some point.
      - name: storage
        emptyDir: {}
      terminationGracePeriodSeconds: 120
      nodeSelector:
        role: core
---
apiVersion: v1
kind: Service
metadata:
  name: parca
  namespace: core
  labels:
    app: parca
spec:
  type: NodePort
  ports:
  - name: parca-web
    port: 80
    targetPort: parca-web-ins
  selector:
    app: parca
